# BlueSphere Render.com Deployment Configuration
# SPDX-License-Identifier: MIT
# SPDX-FileCopyrightText: 2024–2025 Mark Lindon — BlueSphere

databases:
  - name: bluesphere-postgres
    databaseName: bluesphere
    user: bluesphere_user
    plan: starter  # Free tier
    region: oregon

services:
  # FastAPI Backend Service
  - type: web
    name: bluesphere-api
    runtime: python
    plan: starter  # Free tier
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn backend.app.main:app -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:$PORT --timeout 120 --keep-alive 5 --max-requests 1000
    healthCheckPath: /health
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: PORT
        value: 8000
      - key: ENVIRONMENT
        value: production
      - key: POSTGRES_HOST
        fromDatabase:
          name: bluesphere-postgres
          property: host
      - key: POSTGRES_PORT
        fromDatabase:
          name: bluesphere-postgres
          property: port
      - key: POSTGRES_DB
        fromDatabase:
          name: bluesphere-postgres
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: bluesphere-postgres
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: bluesphere-postgres
          property: password
      - key: DATABASE_URL
        fromDatabase:
          name: bluesphere-postgres
          property: connectionString
      - key: CORS_ORIGINS
        value: https://bluesphere-frontend.onrender.com
      - key: API_V1_STR
        value: /api/v1
      - key: PROJECT_NAME
        value: BlueSphere API
      - key: BACKEND_CORS_ORIGINS
        value: '["https://bluesphere-frontend.onrender.com", "http://localhost:3000", "http://localhost:4000"]'
      - key: SECRET_KEY
        generateValue: true
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: 30
      # Ocean data ingestion settings
      - key: NDBC_BASE_URL
        value: https://www.ndbc.noaa.gov/data
      - key: ERDDAP_BASE_URL
        value: https://coastwatch.pfeg.noaa.gov/erddap
      - key: DATA_CACHE_TTL
        value: 3600
      # Performance settings
      - key: MAX_WORKERS
        value: 4
      - key: WORKER_CLASS
        value: uvicorn.workers.UvicornWorker
      - key: TIMEOUT
        value: 120

  # Next.js Frontend Service (Static Site)
  - type: static_site
    name: bluesphere-frontend
    buildCommand: cd frontend/bluesphere-site && npm ci && npm run build
    publishPath: frontend/bluesphere-site/out
    pullRequestPreviewsEnabled: true
    buildFilter:
      paths:
        - frontend/bluesphere-site/**
      ignoredPaths:
        - frontend/bluesphere-site/README.md
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: Referrer-Policy
        value: strict-origin-when-cross-origin
      - path: /*
        name: Permissions-Policy
        value: camera=(), microphone=(), geolocation=()
      # Cache static assets
      - path: /_next/static/*
        name: Cache-Control
        value: public, max-age=31536000, immutable
      - path: /static/*
        name: Cache-Control
        value: public, max-age=31536000, immutable
      - path: /*.js
        name: Cache-Control
        value: public, max-age=31536000, immutable
      - path: /*.css
        name: Cache-Control
        value: public, max-age=31536000, immutable
    routes:
      - type: redirect
        source: /api/*
        destination: https://bluesphere-api.onrender.com$1
        permanent: false
    envVars:
      - key: NODE_VERSION
        value: 18.17.0
      - key: NEXT_PUBLIC_API_URL
        value: https://bluesphere-api.onrender.com
      - key: NEXT_PUBLIC_APP_URL
        value: https://bluesphere-frontend.onrender.com
      - key: NODE_ENV
        value: production

  # Background Data Ingestion Worker (Optional - can be enabled for automated data updates)
  - type: worker
    name: bluesphere-ingestion-worker
    runtime: python
    plan: starter
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: python -m backend.ingestion.scheduler
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: ENVIRONMENT
        value: production
      - key: POSTGRES_HOST
        fromDatabase:
          name: bluesphere-postgres
          property: host
      - key: POSTGRES_PORT
        fromDatabase:
          name: bluesphere-postgres
          property: port
      - key: POSTGRES_DB
        fromDatabase:
          name: bluesphere-postgres
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: bluesphere-postgres
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: bluesphere-postgres
          property: password
      - key: DATABASE_URL
        fromDatabase:
          name: bluesphere-postgres
          property: connectionString
      - key: WORKER_TYPE
        value: ingestion
      - key: NDBC_BASE_URL
        value: https://www.ndbc.noaa.gov/data
      - key: ERDDAP_BASE_URL
        value: https://coastwatch.pfeg.noaa.gov/erddap
      - key: INGESTION_INTERVAL_HOURS
        value: 6
      - key: MAX_RETRY_ATTEMPTS
        value: 3
      - key: LOG_LEVEL
        value: INFO
      # Memory and performance settings for data processing
      - key: PANDAS_COMPUTE_WORKERS
        value: 2
      - key: NETCDF_CACHE_SIZE
        value: 512